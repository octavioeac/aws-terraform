name: terraform-min
on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      # --- Ver los claims OIDC ---
      - name: Debug OIDC claims
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq
          RAW=$(curl -sLS -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com")
          TOKEN=$(echo "$RAW" | jq -r '.value')
          echo "::group::OIDC claims"
          echo "$TOKEN" | awk -F '.' '{print $2}' | base64 -d | jq .
          echo "::endgroup::"

      # --- STS directo para depurar ---
      - name: Direct STS assume-role-with-web-identity (debug)
        env:
          ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
        run: |
          RAW=$(curl -sLS -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com")
          TOKEN=$(echo "$RAW" | jq -r '.value')
          echo "::group::STS response"
          aws sts assume-role-with-web-identity \
            --role-arn "$ROLE_ARN" \
            --role-session-name gha-debug \
            --web-identity-token "$TOKEN" \
            --duration-seconds 900 || true
          echo "::endgroup::"

      # --- OIDC -> credenciales AWS ---
      - name: Configure AWS creds (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Who am I
        run: aws sts get-caller-identity

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: infra
        run: terraform init -input=false

      - name: Terraform Apply (auto)
        working-directory: infra
        run: terraform apply -auto-approve -input=false
