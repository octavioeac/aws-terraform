name: AWS example workflow

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  BUCKET_NAME: "terraform-test-us-east-2"
  AWS_REGION:  "us-east-2"
  TF_WORKING_DIR: infra

permissions:
  id-token: write
  contents: read

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}

      # Crea el bucket si no existe (idempotente)
      - name: Ensure bucket exists
        env:
          BUCKET_NAME: ${{ env.BUCKET_NAME }}
          AWS_REGION:  ${{ env.AWS_REGION }}
        run: |
          set -e
          if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket $BUCKET_NAME already exists"
          else
            echo "Creating bucket $BUCKET_NAME in $AWS_REGION..."
            if [ "$AWS_REGION" = "us-east-1" ]; then
              aws s3api create-bucket --bucket "$BUCKET_NAME"
            else
              aws s3api create-bucket --bucket "$BUCKET_NAME" \
                --create-bucket-configuration LocationConstraint="$AWS_REGION"
            fi
          fi

      - name: Ensure index.html exists (demo)
        run: |
          if [ ! -f index.html ]; then
            echo '<!doctype html><html><body><h1>Hello from GitHub Actions</h1></body></html>' > index.html
          fi

      - name: Copy index.html to S3
        run: aws s3 cp ./index.html "s3://${{ env.BUCKET_NAME }}/"

      # ---------- Terraform ----------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: false

      - name: Cache Terraform dirs
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            ${{ env.TF_WORKING_DIR }}/.terraform
          key: ${{ runner.os }}-tf-${{ hashFiles('infra/**/*.tf') }}

      - name: Terraform fmt (check)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check -recursive

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_PLUGIN_CACHE_DIR: ~/.terraform.d/plugin-cache
        run: terraform init -input=false

      - name: Terraform plan (info)
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -input=false -no-color

      - name: Terraform apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -input=false -auto-approve
